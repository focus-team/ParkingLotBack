buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
	}
}

plugins {
	id "org.flywaydb.flyway" version "5.2.4"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

flyway {
//	url = 'jdbc:h2:file:./target/parkingLot'
//	user = 'sa'
	//# temporary data storage
	//spring.datasource.url = jdbc:h2:mem:testdb
}

group = 'com.oocl.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'com.h2database:h2'
	compile 'org.flywaydb:flyway-core'
	compile 'org.json:json:20180813'
	compile 'com.alibaba:fastjson:1.2.47'
	compile 'mysql:mysql-connector-java:5.1.24'



	testImplementation('org.springframework.boot:spring-boot-starter-test')

	testImplementation('org.junit.jupiter:junit-jupiter-api:5.0.0')
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine:4.12.0"
	testCompile('org.junit.jupiter:junit-jupiter-params:5.0.0')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.0')
}

